<?xml version="1.0" encoding="utf-8" ?>
<configuration>  
  <configSections>
    <section name="NopConfig" type="Infrastructure.Crosscutting.Configuration.NopConfig,Infrastructure.Crosscutting" requirePermission="false" />
  </configSections> 
    <system.diagnostics>
      <sources>
        <source name="TraceSourceApp" switchName="sourceSwitch" switchType="System.Diagnostics.SourceSwitch">
          <!--switchValue="Warning" 也可以在此处直接指定switch的值-->
          <listeners>
            <add name="console" type="System.Diagnostics.ConsoleTraceListener">
              <!--initializeData 主要是用于从那个等级开始记录,如只会记录大于Information的消息-->
              <filter type="System.Diagnostics.EventTypeFilter" initializeData="Information"/>
            </add>
            <add name="myListener"/>
            <remove name="Default"/>
          </listeners>
        </source>
      </sources>
      <switches>
        <!--value 主要是用于从那个等级开始记录,如只会记录大于Information的消息-->
        <add name="sourceSwitch" value="Information"/>
      </switches>
      <sharedListeners>
        <add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="myListener.log">
          <filter type="System.Diagnostics.EventTypeFilter" initializeData="Error"/>
        </add>
      </sharedListeners>
      <trace autoflush="true" indentsize="4">
        <listeners>
          <add name="myListener" />
        </listeners>
      </trace>
    </system.diagnostics> 
  <NopConfig>
    <DynamicDiscovery Enabled="true" />
    <Engine Type="Infrastructure.Crosscutting.Tests.EngineTest.CustomEngine,Infrastructure.Crosscutting.Tests" requirePermission="false"/>
    <ScheduleTasks>
      <!--run each minute: 60*1=60-->
      <Thread seconds="60">
        <task name="Emails" type="Nop.Services.Messages.QueuedMessagesSendTask, Nop.Services" enabled="true" stopOnError="false" maxTries="5" />
      </Thread>
      <!--run each 15 minutes: 60*15=900-->
      <Thread seconds="900">
        <task name="UpdateExchangeRates" type="Nop.Services.Directory.UpdateExchangeRateTask, Nop.Services" enabled="true" stopOnError="false" />
      </Thread>
      <!--run each hour: 60*60=3600-->
      <Thread seconds="3600">
        <task name="DeleteGuestsTask" type="Nop.Services.Customers.DeleteGuestsTask, Nop.Services" enabled="true" stopOnError="false" olderThanMinutes="1440" />
      </Thread>
    </ScheduleTasks>
    <Themes basePath="~/Themes/" />
  </NopConfig>
</configuration>